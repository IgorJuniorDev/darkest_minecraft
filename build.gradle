plugins {
	id 'fabric-loom' version '1.2.6'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url 'https://maven.fabricmc.net/'
	}
	flatDir{
		dirs 'libs'
	}
	mavenCentral()
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation files('libs/player-animation-lib-fabric-1.0.2-rc1+1.20.jar')
	include files('libs/player-animation-lib-fabric-1.0.2-rc1+1.20.jar')
	modImplementation files('libs/bettercombat-fabric-1.8.6+1.20.1.jar')
	include files('libs/bettercombat-fabric-1.8.6+1.20.1.jar')
	modImplementation files('libs/cloth-config-11.1.136-fabric.jar')
	include files('libs/cloth-config-11.1.136-fabric.jar')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
}
tasks.withType(Jar) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Или DuplicatesStrategy.INCLUDE в зависимости от того, как вы хотите обработать дубликаты
}

